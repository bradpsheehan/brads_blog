---
title: Intentionality
date: 2013-02-10 20:50 -07:00
tags:
<!-- image: /images/blog/eloquent-ruby.jpg -->
---

There were many aspects of 'The Passionate Programmer' that I liked.  One among them was the "Act on it!" section with which Fowler concluded each section of his book.  This was an important element insofar as it helped set a tone of intentionality upon which the rest of his thoughts were built.  Fowler's take on life and career development is underpinned by philosophical references, musical metaphors, and his thoughts on love, passion, and progress. He balances this with recurrent actionable suggestions aimed at 'materializing' the aforementioned musings.  I think that 'intentionality' is one of the over-arching themes/messages of the book.  To achieve satisfaction, which the book suggests might not mean a 300K salary from Microsoft, we must both think critically about what we are passionate, or even just curious about, and also actively establish disciplines which will spur progress toward the vision that we set out for.

Fowler also highlights that while one might be disciplined in their approach to life and career development, his or her path might still be defined as less than straight. There were various points in the book that highlighted the importance of these zigs and zags in life's process as integral to the achievement of milestones.  This resonates with me because I feel like while my (relatively young) career has not taken a straight and narrow path toward my goals, that my varying experiences have built momentum in their general direction.  The zigs and zags of my experience have often been the unexpected points at which meaningful relationships are built, or new skills are gained.  Those are the points that often make life more exciting.

The book contains many lessons that can be applied to our gSchool program.  The one that comes to my mind most immediately is Fowler's suggestion of choosing short term tasks that will help me reach the longer term goals.  He specifically suggests choosing something today and make it 'Better than Yesterday.'  This could be applicable at different points in gSchool, but right now, as a Ruby Newby, it is especially helpful to think that I can take on the somewhat daunting world of code in bite size pieces by simply building upon and improving what I did yesterday.  I also think that this will be a helpful approach for pacing projects and not getting burnt out insofar as it reminds me that I can incrementally build and improve my programs and focus on the process rather than being paralyzed by the thought of a final deliverable's complex specifications.  I kind of learned this the hard way during the Event Reporter project insofar as I read too far into the project before tackling the first and simplest requirements.  This resulted in me 'scatter-coding' (i.e. starting code here and there and not finishing one method before starting another) and trying to take on too much at once rather than incrementally building and improving methods and achieving complexity in a paced manner.  In the end, I survived and have learned an important lesson.  I am glad that we read 'The Passionate Programmer' and will be happy to keep the book on my shelf for a while.
